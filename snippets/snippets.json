{
    "rui-breadcrumb-012": { "prefix": "rui-breadcrumb-012", "body": ["<Breadcrumb><Breadcrumb.Item>Home</Breadcrumb.Item><Breadcrumb.Item><a>Application Center</a></Breadcrumb.Item><Breadcrumb.Item><a>Application List</a></Breadcrumb.Item><Breadcrumb.Item>An Application</Breadcrumb.Item></Breadcrumb>"], "description": "面包屑" },
    "rui-button-001": { "prefix": "rui-button-001", "body": ["<Button type='primary'>Primary</Button>"], "description": "按钮：Primary" },
    "rui-button-003": { "prefix": "rui-button-003", "body": ["<Button type='dashed'>Dashed</Button>"], "description": "按钮：Dashed" },
    "rui-button-005": { "prefix": "rui-button-005", "body": ["<Button type='primary' shape='circle' icon='search' />"], "description": "按钮：圆形搜索" },
    "rui-button-004": { "prefix": "rui-button-004", "body": ["<Button type='danger'>Danger</Button>"], "description": "按钮：Danger" },
    "rui-button-007": { "prefix": "rui-button-007", "body": ["<Radio.Group value='large'>", "<Radio.Button value='large'>Large</Radio.Button>", "<Radio.Button value='default'>Default</Radio.Button>", "<Radio.Button value='small'>Small</Radio.Button>", "</Radio.Group>"], "description": "按钮：一组按钮" },
    "rui-button-008": { "prefix": "rui-button-008", "body": ["<Button type='primary' loading>Loading</Button>"], "description": "按钮：loading" },
    "rui-button-009": { "prefix": "rui-button-009", "body": ["<Button type='primary' shape='circle' loading />"], "description": "按钮：圆形loading" },
    "rui-button-006": { "prefix": "rui-button-006", "body": ["<Button type='primary' icon='search'>Search</Button>"], "description": "按钮：带图标" },
    "rui-button-002": { "prefix": "rui-button-002", "body": ["<Button>Default</Button>"], "description": "按钮：Default" },
    "rui-button-010": { "prefix": "rui-button-010", "body": ["<Dropdown overlay={<Menu><Menu.Item key='1'>1st item</Menu.Item><Menu.Item key='2'>2nd item</Menu.Item><Menu.Item key='3'>3rd item</Menu.Item></Menu>}><Button>Actions <Icon type='down' /></Button></Dropdown>"], "description": "按钮：Dropdown.Button 组合使用" },
    "rui-checkbox-020": { "prefix": "rui-checkbox-020", "body": ["<Checkbox>Checkbox</Checkbox>"], "description": "多选框：基本用法" },
    "rui-checkbox-021": { "prefix": "rui-checkbox-021", "body": ["<Checkbox.Group options={['Apple', 'Pear', 'Orange']} defaultValue={['Apple']} />"], "description": "多选框：Checkbox 组，数组中格式也可以为{ label: 'Apple', value: 'Apple' }" },
    "rui-datepicker-022": { "prefix": "rui-datepicker-022", "body": ["<DatePicker />"], "description": "日期选择框：最简单的用法" },
    "rui-datepicker-023": { "prefix": "rui-datepicker-023", "body": ["<DatePicker.RangePicker />"], "description": "日期选择框：开始-结束" },
    "rui-dropdown-013": { "prefix": "rui-dropdown-013", "body": ["<Dropdown overlay={<Menu><Menu.Item><a target='_blank' rel='noopener noreferrer'>1st menu item</a></Menu.Item><Menu.Item><a target='_blank' rel='noopener noreferrer'>2nd menu item</a></Menu.Item><Menu.Item><a target='_blank' rel='noopener noreferrer'>3rd menu item</a></Menu.Item></Menu>}><a>Hover me <Icon type='down' /></a></Dropdown>"], "description": "下拉菜单" },
    "rui-form-024": { "prefix": "rui-form-024", "body": ["<Form layout='inline' onSubmit={this.handleSubmit}><FormItem>{getFieldDecorator('userName', {rules: []})(<Input prefix={<Icon type='user' />} placeholder='Username' />)}</FormItem><FormItem>{getFieldDecorator('password', {rules: []})(<Input prefix={<Icon type='lock' />} type='password' placeholder='Password' />)}</FormItem><FormItem><Button type='primary' htmlType='submit'>Log in</Button></FormItem></Form>"], "description": "表单：水平登录栏,需要在class定义@Form.create()；render函数里定义const { getFieldDecorator } = this.props.form;" },
    "rui-form-025": {
        "prefix": "rui-form-025",
        "body": ["<Form onSubmit={this.handleSubmit} style={{ 'maxWidth': 300 }}><Form.Item>{getFieldDecorator('userName', {rules: []})(<Input prefix={<Icon type='user' />} placeholder='Username' />)}</Form.Item><Form.Item>{getFieldDecorator('password', {rules: []})(<Input prefix={<Icon type='lock' />} type='password' placeholder='Password' />)}</Form.Item><Form.Item>{getFieldDecorator('remember', {valuePropName: 'checked',initialValue: true})(<Checkbox>Remember me</Checkbox>)}<a style={{ float: 'right' }} href=''>Forgot password</a><Button type='primary' htmlType='submit' style={{ width: '100%' }}>Log in</Button>Or <a href=''>register now!</a></Form.Item></Form>"],
        "description": "表单：普通的登录框,需要在class定义@Form.create()；render函数里定义const { getFieldDecorator } = this.props.form;"
    },
    "rui-form-026-layout": { "prefix": "rui-form-026-layout", "body": ["const { getFieldDecorator } = this.props.form;", "const formItemLayout = { labelCol: { xs: { span: 24 }, sm: { span: 5 }, xxl: { span: 7 } }, wrapperCol: { xs: { span: 24 }, sm: { span: 14 }, xxl: { span: 10 } } };", "const submitFormLayout = { wrapperCol: { xs: { span: 24, offset: 0 }, sm: { span: 10, offset: 7 } } };"], "description": "表单依赖，请写在render函数里" },
    "rui-grid-011": { "prefix": "rui-grid-011", "body": ["<Row gutter={16}><Col span={12}>col-12</Col><Col span={12}>col-12</Col></Row>"], "description": "栅格：两列" },
    "rui-modal-032": { "prefix": "rui-modal-032", "body": ["<Modal title='标题' visible={true} onOk={this.handleOk} onCancel={this.handleCancel}><p>内容</p></Modal>"], "description": "对话框：基本使用" },
    "rui-page-login": {
        "prefix": "rui-page-login",
        "body": [
            "import React, { Component } from 'react';",
            "import { Form, Icon, Input, Button, Checkbox } from 'antd';",
            "import style from './index.less';",
            "const FormItem = Form.Item;",
            "",
            "@Form.create()",
            "class Login extends Component {",
            "state = {};",
            "handleSubmit = e => {",
            "e.preventDefault();",
            "this.props.form.validateFields((err, values) => {",
            "if (!err) {",
            "console.log('Received values of form: ', values);",
            "}",
            "});",
            " };",
            "  render() {",
            "const { getFieldDecorator } = this.props.form;",
            "return (",
            "<div className={style.container}>",
            " <div className={style.content}>",
            "<div className={style.top}>",
            " <div className={style.header}>",
            "<img className={style.logo} src='http://www.zhaoze.org/logo.png' />",
            "<span className={style.title}>Ant Design</span>",
            "</div>",
            "<div className={style.desc}>",
            "Ant Design 是西湖区最具影响力的 Web 设计规范",
            "</div>",
            " </div>",
            "<div className={style.main}>",
            " <Form onSubmit={this.handleSubmit}>",
            " <FormItem>",
            " {getFieldDecorator('userName', {",
            "rules: [{ required: true, message: '请输入用户名' }]",
            " })(",
            "<Input size='large' prefix={ <Icon type='user' style={{ color: 'rgba(0,0,0,.25)' }} /> } placeholder='Username' />",
            " )}",
            " </FormItem>",
            "<FormItem>",
            " {getFieldDecorator('password', {",
            "  rules: [{ required: true, message: '请输入密码' }]",
            " })(",
            " <Input size='large' prefix={ <Icon type='lock' style={{ color: 'rgba(0,0,0,.25)' }} /> } type='password' placeholder='Password' /> )}",
            " </FormItem>",
            "<div><Checkbox>自动登录</Checkbox><a style={{ float: 'right' }}>忘记密码</a></div>",
            "<Button size='large' type='primary' htmlType='submit' className={style.submit}>登录</Button>",
            "</Form>",
            "</div>",
            "</div>",
            "<div className={style.globalFooter}><div className={style.links}><a>帮助</a><a>隐私</a><a>条款</a></div>",
            "<div className={style.copyright}>Copyright <Icon type='copyright' /> 2018 蚂蚁金服体验技术部出品</div>",
            " </div>",
            " </div>",
            ");}}",
            "export default Login;"
        ],
        "description": "页面：登录；注意：请在样式文件里运行 'rui-page-login-css'"
    },
    "rui-modal-033": { "prefix": "rui-modal-033", "body": ["Modal.confirm({ title: '提示', content: '确定删除吗?', onOk() {}, onCancel() {} });"], "description": "对话框：确认对话框" },
    "rui-pagination-014": { "prefix": "rui-pagination-014", "body": ["<Pagination defaultCurrent={1} total={50} />"], "description": "分页：基础分页" },
    "rui-pagination-015": { "prefix": "rui-pagination-015", "body": ["<Pagination showSizeChanger defaultCurrent={3} total={500} />"], "description": "分页：改变每页显示条目数" },
    "rui-pagination-016": { "prefix": "rui-pagination-016", "body": ["<Pagination showQuickJumper defaultCurrent={2} total={500} />"], "description": "分页：快速跳转到某一页" },
    "rui-pagination-017": { "prefix": "rui-pagination-017", "body": ["<Pagination size='small' total={50} />"], "description": "分页：迷你版本" },
    "rui-radio-027": { "prefix": "rui-radio-027", "body": ["<Radio>Radio</Radio>"], "description": "单选框：最简单的用法" },
    "rui-radio-028": { "prefix": "rui-radio-028", "body": ["<Radio.Group defaultValue={1}><Radio value={1}>A</Radio><Radio value={2}>B</Radio><Radio value={3}>C</Radio><Radio value={4}>D</Radio></Radio.Group>"], "description": "单选框：单选组合" },
    "rui-select-029": { "prefix": "rui-select-029", "body": ["<Select defaultValue='lucy' style={{ width: 120 }}><Select.Option value='jack'>Jack</Select.Option><Select.Option value='lucy'>Lucy</Select.Option><Select.Option value='disabled' disabled>Disabled</Select.Option><Select.Option value='Yiminghe'>yiminghe</Select.Option></Select>"], "description": "下拉选择器：基本使用" },
    "rui-steps-018": { "prefix": "rui-steps-018", "body": ["<Steps current={1}><Steps.Step title='Finished' description='This is a description.' /><Steps.Step title='In Progress' description='This is a description.' /><Steps.Step title='Waiting' description='This is a description.' /></Steps>"], "description": "步骤条：基本用法" },
    "rui-table-031": { "prefix": "rui-table-031", "body": ["<Table rowKey='id' columns={[{ title: '名称', dataIndex: 'name' },{ title: '性别', dataIndex: 'sex' },{title: '操作',render: record => (<span><a>修改</a><Divider type='vertical' /><a>删除</a><Divider type='vertical' /><a>查看</a></span>)}]} dataSource={[{ id: 1, name: '张三', sex: '男' }]}/>"], "description": "表格：基本使用" },
    "rui-switch-030": { "prefix": "rui-switch-030", "body": [" <Switch checkedChildren='开' unCheckedChildren='关' defaultChecked />"], "description": "开关：带有文字" },
    "rui-steps-019": { "prefix": "rui-steps-019", "body": ["<Steps direction='vertical' current={1}><Steps.Step title='Finished' description='This is a description.' /><Steps.Step title='In Progress' description='This is a description.' /><Steps.Step title='Waiting' description='This is a description.' /></Steps>"], "description": "步骤条：竖直方向" },
    "rui-form-026": {
        "prefix": "rui-form-026",
        "body": [
            "<Form onSubmit={this.handleSubmit}><Form.Item {...formItemLayout} label='姓名'>{getFieldDecorator('name', {rules: [{required: true,message: '请输入姓名'}]})(<Input placeholder='请输入姓名' />)}</Form.Item><Form.Item {...formItemLayout} label='证件类型' extra='信息提示'>{getFieldDecorator('type', {rules: [{required: true,message: '请选择证件类型'}]})(<Select style={{ width: 200 }} placeholder='请选择'><Select.Option value='0'>身份证</Select.Option><Select.Option value='1'>军官</Select.Option></Select>)}</Form.Item><Form.Item {...formItemLayout} label='出生日期'>{getFieldDecorator('birthday', {rules: [{required: true,message: '请选择出生日期'}]})(<DatePicker placeholder='请选择' />)}</Form.Item><Form.Item {...formItemLayout} label='性别'>{getFieldDecorator('sex', {initialValue: '0'})(<Radio.Group><Radio value='0'>男</Radio><Radio value='1'>女</Radio></Radio.Group>)}</Form.Item><Form.Item {...formItemLayout} label='爱好'>{getFieldDecorator('hobby', {initialValue: [0]})(<Checkbox.Group options={[{ label: '游戏', value: 0 }, { label: '旅游', value: 1 }]} />)}</Form.Item><Form.Item {...formItemLayout} label='备注'>{getFieldDecorator('remark', {initialValue: ''})(<Input.TextArea placeholder='请输入备注' autosize={{ minRows: 3, maxRows: 6 }} />)}</Form.Item><Form.Item {...submitFormLayout}>{getFieldDecorator('agreement', {valuePropName: 'checked'})(<Checkbox>I have read the <a>agreement</a></Checkbox>)}</Form.Item><FormItem {...submitFormLayout}><Button type='primary' htmlType='submit'>注册</Button><Button style={{ marginLeft: 8 }}>取消</Button></FormItem></Form>"
        ],
        "description": "表单：注册新用户,需要在class定义@Form.create();注意：请务必再执行‘rui-form-026-layout’"
    }
}
